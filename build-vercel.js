#!/usr/bin/env node

// Script de build sp√©cifique pour Vercel
const fs = require('fs');
const path = require('path');

console.log('üîß Build Vercel - G√©n√©ration env.js...');

// G√©n√©rer env.js avec les variables d'environnement Vercel
const envContent = `// Configuration d'environnement pour Enixis Corp
// G√©n√©r√© automatiquement par Vercel

window.env = {
  API_BASE: "",
  SLACK_WEBHOOK_URL: "${process.env.SLACK_WEBHOOK_URL || ''}",
  FLOOZ_PHONE: "${process.env.FLOOZ_PHONE || ''}",
  MIXX_PHONE: "${process.env.MIXX_PHONE || ''}",
  USDT_WALLET: "${process.env.USDT_WALLET || ''}",
  BTC_WALLET: "${process.env.BTC_WALLET || ''}"
};`;

fs.writeFileSync('env.js', envContent);
console.log('‚úÖ env.js g√©n√©r√© avec les variables Vercel');

// V√©rifier les fichiers critiques
const criticalFiles = ['index.html', 'demande.html', 'style.css', 'script.js', 'request.js'];
let allFilesExist = true;

criticalFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file} trouv√©`);
  } else {
    console.error(`‚ùå ${file} manquant`);
    allFilesExist = false;
  }
});

if (!allFilesExist) {
  console.error('‚ùå Build √©chou√©: Fichiers critiques manquants');
  process.exit(1);
}

console.log('‚úÖ Build Vercel termin√© avec succ√®s');