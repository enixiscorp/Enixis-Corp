name: Deploy to GitHub Pages (with env.js)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate env.js from secrets
        run: |
          echo "🔧 Génération du fichier env.js avec les secrets..."
          
          # Vérification des secrets requis
          if [ -z "$SLACK_WEBHOOK_URL" ]; then
            echo "❌ ERREUR: Secret SLACK_WEBHOOK_URL est vide"
          else
            echo "✅ SLACK_WEBHOOK_URL configuré"
          fi
          
          if [ -z "$FLOOZ_PHONE" ]; then
            echo "⚠️ AVERTISSEMENT: FLOOZ_PHONE non configuré"
          else
            echo "✅ FLOOZ_PHONE configuré"
          fi
          
          if [ -z "$MIXX_PHONE" ]; then
            echo "⚠️ AVERTISSEMENT: MIXX_PHONE non configuré"
          else
            echo "✅ MIXX_PHONE configuré"
          fi
          
          if [ -z "$USDT_WALLET" ]; then
            echo "⚠️ AVERTISSEMENT: USDT_WALLET non configuré"
          else
            echo "✅ USDT_WALLET configuré"
          fi
          
          if [ -z "$BTC_WALLET" ]; then
            echo "⚠️ AVERTISSEMENT: BTC_WALLET non configuré"
          else
            echo "✅ BTC_WALLET configuré"
          fi
          
          # Génération du fichier env.js
          cat > env.js << EOF
window.env = {
  "SLACK_WEBHOOK_URL": "$SLACK_WEBHOOK_URL",
  "FLOOZ_PHONE": "$FLOOZ_PHONE",
  "MIXX_PHONE": "$MIXX_PHONE",
  "USDT_WALLET": "$USDT_WALLET",
  "BTC_WALLET": "$BTC_WALLET"
};
EOF
          
          echo "📄 Fichier env.js généré avec succès"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          FLOOZ_PHONE: ${{ secrets.FLOOZ_PHONE }}
          MIXX_PHONE: ${{ secrets.MIXX_PHONE }}
          USDT_WALLET: ${{ secrets.USDT_WALLET }}
          BTC_WALLET: ${{ secrets.BTC_WALLET }}

      - name: Optimize and validate files
        run: |
          echo "🔍 Validation des fichiers HTML..."
          # Vérifier que les fichiers critiques existent
          for file in index.html demande.html style.css script.js request.js; do
            if [ -f "$file" ]; then
              echo "✅ $file trouvé"
            else
              echo "❌ $file manquant"
              exit 1
            fi
          done
          
          echo "📊 Statistiques du projet:"
          echo "- Fichiers HTML: $(find . -name "*.html" | wc -l)"
          echo "- Fichiers CSS: $(find . -name "*.css" | wc -l)"
          echo "- Fichiers JS: $(find . -name "*.js" | wc -l)"
          echo "- Images: $(find ./images -type f 2>/dev/null | wc -l || echo 0)"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


